---

#Launch Reference Network from Cloudformation Templates

# Tear down any dependent objects 
- include: deployment-cleanup.yaml
  delegate_to: localhost

# Import any variables if nested 
- include: nested.yaml
  delegate_to: localhost


- name: Store Paramaters 
  template: src="{{ cft_parameters_template_name }}" dest="{{ install_path }}/state_cache/{{ deploymentName }}/{{ service_name }}-external-lb-cft-params.yaml"
  delegate_to: localhost
  when: cft_state == "present"

# - name: debug_params
#   debug: msg="{{ lookup('template', cft_parameters_template_name ) | from_yaml }}"

- name: Launching External LB from CFT
  delegate_to: localhost
  cloudformation:
    state: "{{ cft_state }}"
    stack_name: "{{ deploymentName }}-{{ service_name }}-external-lb"
    region: "{{ aws_region }}"
    template: "{{ install_path }}/roles/external_lb_aws_cft/files/{{ cft_file_name }}"
    template_parameters: "{{ lookup('template', cft_parameters_template_name ) | from_yaml }}"
    tags: 
      Name: "{{ deploymentName }}-{{ service_name }}-external-lb"
      deployment: "{{ deploymentName }}"
      serviceName: "{{ service_name }}"
  register: deploy_external_lb_stack_results
  when: cft_state == "present"

# Persist data to disk for use across plays
- name: Persist variable data
  copy: content="{{ deploy_external_lb_stack_results | to_yaml }}" dest="{{ install_path }}/state_cache/{{ deploymentName }}/{{ service_name }}-external-lb-cft-output.yaml"
  when: cft_state == "present"


- name: Tearing Down External LB from CFT
  delegate_to: localhost
  cloudformation:
    state: "{{ cft_state }}"
    stack_name: "{{ deploymentName }}-{{ service_name }}-external-lb"
    region: "{{ aws_region }}"
    template: "{{ install_path }}/roles/external_lb_aws_cft/files/{{ cft_file_name }}"
    template_parameters: "{{ lookup('template', cft_parameters_template_name ) | from_yaml }}"
    tags: 
      Name: "{{ deploymentName }}-{{ service_name }}-external-lb"
      deployment: "{{ deploymentName }}"
      serviceName: "{{ service_name }}"
  register: teardown_external_lb_stack_results
  when: cft_state == "absent"

# Persist data to disk for use across plays
- name: Persist variable data
  copy: content="{{ teardown_external_lb_stack_results | to_yaml }}" dest="{{ install_path }}/state_cache/{{ deploymentName }}/{{ service_name }}-external-lb-cft-output.yaml"
  when: cft_state == "absent"

#- copy: content="{{ external_lb_stack_results['stack_outputs'] | to_json }}" dest="{{ install_path }}/state_cache/{{ deploymentName }}/external-lb-cft-output.json"